name: GCC Build (GNU make)

on:
  push:
    branches: [ master ]
    paths-ignore:
        - '**.md'
        - '*COPYING'
        - '*COPYING.CC0'
        - '*COPYING.DOC'
        - '*ffmpegfs.cbp'
        - '*ffmpegfs.depend'
        - '*ffmpegfs.pro'
        - '*NEWS'
        - '*TODO'
  pull_request:
    branches: [ master ]
    paths-ignore:
        - '**.md'
        - '*COPYING'
        - '*COPYING.CC0'
        - '*COPYING.DOC'
        - '*ffmpegfs.cbp'
        - '*ffmpegfs.depend'
        - '*ffmpegfs.pro'
        - '*NEWS'
        - '*TODO'
jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Prerequisites
      run: |
        sudo apt-get update
        sudo apt-get install -yq cppcheck asciidoc-base w3m libchromaprint-dev doxygen graphviz
        sudo apt-get install -yq libcue-dev libfuse3-dev libsqlite3-dev libavcodec-dev libavformat-dev libswresample-dev libavutil-dev libswscale-dev libavfilter-dev libchardet-dev
        sudo apt-get install -yq libdvdread-dev libdvdnav-dev libbluray-dev
    - name: autogen.sh
      run: ./autogen.sh
    - name: configure
      run: CC=gcc  CXX="g++" ./configure
    - name: make
      run: make -s -j `nproc`
    - name: make check
      run: make -s -j `nproc` check
    - name: make cppcheck
      run: make -s -j `nproc` cppcheck
    - name: Archive GCC Build Logs
      if: always()
      uses: actions/upload-artifact@v3
      with:
        name: Collected build logs
        path: |
           *.log
           config.status
           doxyfile.inc
    - name: Archive Test Results
      if: always()
      uses: actions/upload-artifact@v3
      with:
        name: Collected test results
        path: |
           test/*.log
           test/*.trs
           test/*.tag
